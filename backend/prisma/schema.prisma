// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  username      String      @unique
  email         String      @unique
  passwordHash  String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  itineraries   Itinerary[]
}

model Itinerary {
  id          Int        @id @default(autoincrement())
  userId      Int
  title       String
  description String?
  startDate   DateTime?
  endDate     DateTime?
  totalEstimatedCost Decimal?   @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  planItems   PlanItem[]
}

enum TransportMode {
  driving
  walking
  bicycling
  transit
}

model PlanItem {
  id              Int           @id @default(autoincrement())
  itinerary       Itinerary     @relation(fields: [itineraryId], references: [id], onDelete: Cascade)
  itineraryId     Int
  title           String
  description     String?
  planDate        DateTime
  orderIndex      Int
  locationName    String
  amapPoiId       String?
  latitude        Decimal       @db.Decimal(10, 8)
  longitude       Decimal       @db.Decimal(10, 7)
  startTime       DateTime?
  endTime         DateTime?
  durationMinutes Int?
  itemType        String?
  transportMode   TransportMode?
  notes           String?
  estimatedCost   Decimal?      @db.Decimal(10, 2)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}
